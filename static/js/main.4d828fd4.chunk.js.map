{"version":3,"sources":["utils/style.js","components/todoList.js","components/category.js","components/input.js","utils/validation.js","components/addList.js","utils/img/delete-forever.svg","components/schedule.js","components/listDetail.js","components/NotFound.js","components/todo.js","components/App.js","index.js"],"names":["Wrapper","styled","div","todoList","id","title","description","time","date","category","categoryList","categoryName","color","daysOfWeek","1","2","3","4","5","6","7","todoListData","categoryListData","Category","sortCategory","countItem","useState","scroll","setScroll","eachMove","parseInt","length","className","style","transform","map","borderTop","red","onClick","console","log","input","props","type","name","value","onChange","placeholder","Validation","strictStringValidation","string","test","longTextValidation","toggleDisplay","AddList","todoForm","setTodoForm","toggle","setToggle","errorMessage","setErrorMessage","error","setError","setCategory","setTodoList","useEffect","displayForm","Schema","onFormChange","e","form","currentTarget","toggleClass","onSubmit","preventDefault","array","schema","isAllValid","validation","each","checkValidity","addToList","Schedule","data","deleteList","Fragment","to","eachList","history","push","backgroundColor","src","deleteImg","alt","ListDetail","match","params","selectedQuery","filter","sq","class","display","marginBottom","fontSize","NotFound","href","Todo","sort","dataItems","setDataItems","mainItem","setMainItems","idGenerate","setID","dict","dataItem","lastElement","newDate","Date","now","getDate","daySwitch","getHours","timeFormat","getMinutes","toString","replace","currentTime","getYear","getFullYear","getMonth","getDay","getDaysInWeek","getCurrentDate","newTodo","deleteItem","mainItems","itemSelect2","splice","indexOf","useHistory","location","useLocation","transitions","useTransition","from","opacity","enter","config","duration","delay","pathname","includes","item","path","render","component","exact","App","reactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.4d828fd4.chunk.js","sourcesContent":["\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div `\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    max-width: 100vw;\r\n    \r\n    \r\n    &:after {\r\n        content: \"\";\r\n        display: block;\r\n        background-color: rgb(3, 123, 235);\r\n        width: 150%;\r\n        height: 70rem;\r\n        border-radius: 100%;\r\n        top: -650px;\r\n        left: -300px;\r\n        transform: rotate(-10deg);\r\n        z-index: -99;\r\n        position: absolute;\r\n    }\r\n\r\n    @media screen and (max-width:810px) {\r\n        overflow: scroll;\r\n        background-color: rgb(62, 156, 243);\r\n\r\n        &:after {\r\n            display: none;\r\n        }\r\n    }\r\n`\r\n\r\nexport default Wrapper;","const todoList = [\r\n    {\r\n        id: 1,\r\n        title: \"1 My first Birthday\",\r\n        description: \"We need to visit the grandma for the birthday gift & description\",\r\n        time: \"10:00AM\",\r\n        date: \"Sunday, 5 May 2021\",\r\n        category: 1\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"2 Coding\",\r\n        description: \"We need to visit the grandma for the birthday gift & description\",\r\n        time: \"10:00AM\",\r\n        date: \"Sunday, 5 May 2021\",\r\n        category: 2\r\n    },\r\n    \r\n]\r\n\r\nconst categoryList = [\r\n    {\r\n        id: \"\",\r\n        categoryName: \"All\",\r\n    },\r\n    {\r\n        id: 1,\r\n        categoryName: \"Education\",\r\n        color: \"blue\",\r\n    },\r\n    {\r\n        id: 2,\r\n        categoryName: \"Leisure\",\r\n        color: \"rgb(32, 1, 90)\",\r\n    },\r\n    {\r\n        id: 3,\r\n        categoryName: \"Household\",\r\n        color: \"rgb(71, 1, 45)\",\r\n    },\r\n    {\r\n        id: 4,\r\n        categoryName: \"Occasion\",\r\n        color: \"rgb(4, 151, 53)\",\r\n    },\r\n    {\r\n        id: 5,\r\n        categoryName: \"Technology\",\r\n        color: \"rgb(226, 194, 12)\",\r\n    },\r\n    \r\n    \r\n    \r\n]\r\n\r\nconst daysOfWeek = {\r\n    1: \"Monday\", 2:\"Tuesday\", 3:\"Wednesday\", 4:\"Thursday\", 5:\"Friday\", 6:\"Saturday\", 7:\"Sunday\"\r\n}\r\n\r\n\r\nexport function todoListData() {\r\n    return todoList;\r\n}\r\n\r\nexport function categoryListData() {\r\n    return categoryList;\r\n}\r\n\r\n\r\n\r\n\r\nexport function getCurrentDate() {\r\n    const newDate = Date.now();\r\n    const getDate = new Date(newDate);\r\n    const daySwitch = getDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n    const timeFormat = (getDate.getMinutes()).toString().replace(/(\\d{1}\\s)/, '0$1');\r\n    const currentTime = `${getDate.getHours()}:${timeFormat} ${daySwitch}`;\r\n    //date\r\n    const getYear = getDate.getFullYear();\r\n    const getMonth = getDate.getMonth();\r\n    const getDay = getDate.getDate();\r\n    const getDaysInWeek = getDate.getDay();\r\n    const currrentDate = `${daysOfWeek[getDaysInWeek]}, ${getDay} ${getMonth} ${getYear}`;\r\n\r\n    const dateTime = [currrentDate, currentTime];\r\n    return dateTime;    \r\n}\r\n","import React, {useState} from 'react';\r\n// import styled from 'styled-components'\r\n\r\nimport {categoryListData} from './todoList';\r\nimport { animated } from 'react-spring';\r\n\r\nconst Category = ({sortCategory, countItem}) => {\r\n    const [scroll, setScroll] = useState(0);\r\n\r\n    const categoryList = [...categoryListData()];\r\n\r\n    const scrollLength = 460;\r\n    const eachMove = parseInt(scrollLength / (categoryList.length));\r\n    \r\n\r\n    const scrollX = () => {\r\n        if(scroll <= 460) setScroll(scroll + eachMove);\r\n        else setScroll(0);\r\n        console.log(scroll);\r\n    }    \r\n\r\n    return ( \r\n        <div className=\"category\">\r\n            <div className=\"category-inner flex\" style={\r\n                {transform:`translateX(${-scroll}px)`}}>\r\n                    {categoryList.map(({categoryName, color, id}) => (\r\n\r\n                        <animated.div className=\"each-cat\" style={{borderTop:`15px solid ${color}`}} red key={id} onClick={() => sortCategory(id)}>\r\n                            \r\n                            <h4 className=\"cat-heading\">{categoryName}</h4>\r\n                                <span>Item {id && countItem(id)}</span>\r\n                            \r\n                        </animated.div>\r\n                        \r\n                    ))}\r\n                </div>\r\n                <div className=\"scroll\" onClick={scrollX}>&gt;</div>\r\n        </div>\r\n     );\r\n     \r\n}\r\n\r\n\r\nexport default Category;\r\n\r\n// const Scroll = styled.div`\r\n//     transform: translateX(${scroll}px)\r\n// `\r\n\r\n","\r\nexport default function input(props) {\r\n    return (\r\n        <input type={props.type} name={props.name} value={props.value} onChange={props.onChange} placeholder={props.placeholder} className=\"des-input\"/>\r\n    );\r\n}   ","\r\n\r\nexport default class Validation { \r\n\r\n    strictStringValidation = (string) => {\r\n        this.string = string;\r\n        const stringCheck = /[a-zA-Z\\s\\D]$/;\r\n        return stringCheck.test(string)\r\n    }\r\n    \r\n    longTextValidation = (string) => {\r\n        this.string = string;\r\n        const stringCheck = /^[\\w\\d]+.+$/;\r\n        return stringCheck.test(string)\r\n    }\r\n\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport Input from './input';\r\nimport { categoryListData, todoListData } from './todoList';\r\nimport Validation from './../utils/validation';\r\nlet toggleDisplay = true;\r\n\r\nfunction AddList (props) {    \r\n    const [todoForm, setTodoForm] = useState({category: 1, title: '', description: ''});\r\n    \r\n    const [toggle, setToggle] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    const [category, setCategory] = useState([]);\r\n    const [, setTodoList] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        setCategory(categoryListData())\r\n        setTodoList(todoListData())\r\n    }, [])\r\n    \r\n    const displayForm = () => {    \r\n        if(toggleDisplay) toggleDisplay = false \r\n        else toggleDisplay = true;\r\n        setToggle(toggleDisplay)\r\n    }\r\n    const Schema = {\r\n        title: \"text\",\r\n        description: \"text\"\r\n    }\r\n\r\n    const errorMessageDisplay = (type,name) => {\r\n        return type === \"text\" ? `${name} is empty` : \"\";\r\n    }\r\n\r\n    const checkValidity = (array, schema) => {\r\n        let isAllValid;\r\n        const validation = new Validation();\r\n        for(let each in array) {\r\n            if (schema[each] === \"text\") {\r\n                if(validation.longTextValidation(array[each])) {\r\n                    isAllValid = true\r\n                    setError(false);\r\n                }\r\n                else {\r\n                    isAllValid = false;\r\n                    setErrorMessage(errorMessageDisplay(schema[each], each));\r\n                    setError(true);                \r\n                    break;\r\n                }\r\n            }\r\n        } \r\n        return isAllValid;  \r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(checkValidity(todoForm, Schema)) {\r\n            //todoList from todo props \r\n            props.addToList(todoForm);\r\n            setTodoForm({category: 1, description:'', title:''});\r\n            displayForm();\r\n        };\r\n    }\r\n\r\n    const onFormChange = (e) => {\r\n        const form = {...todoForm};\r\n        form[e.currentTarget.name] = (e.currentTarget.name === \"category\") ? parseInt(e.currentTarget.value) : e.currentTarget.value;\r\n        setTodoForm(form);\r\n    }\r\n\r\n    let toggleClass = toggle ? \"add-btn\" : \"add-btn showForm\";\r\n    \r\n    return ( \r\n        <div>\r\n            <div className={toggleClass}  onClick={displayForm}>\r\n                    <span>+</span>        \r\n            </div>\r\n\r\n            <div className=\"form\" onSubmit={onSubmit}>\r\n\r\n                <form className={toggle ? \"remove-form\" : \"\"}>    \r\n                    <div className={error ? \"main-toast display\" : \"main-toast\"}>\r\n                        <div className=\"toast\">{errorMessage}</div>\r\n                    </div>\r\n\r\n                    <select className=\"select-input\" onChange={onFormChange} name=\"category\" value={parseInt(todoForm.category)}>\r\n                        {category.map(({categoryName, id}) => (\r\n                            id && <option key={id} value={id}>{categoryName}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <Input name=\"title\" value={todoForm.title} onChange={onFormChange} type=\"text\" placeholder=\"Title\"/>\r\n                    \r\n                    <textarea name=\"description\" value={todoForm.description} onChange={onFormChange} className=\"text-input\">\r\n                    </textarea>\r\n\r\n                    <span className=\"close\" onClick={displayForm}>X</span>\r\n                    \r\n                    <span className=\"submit-header\">\r\n                    <input type=\"submit\" className=\"submit-btn\"/>\r\n                    </span>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n    );\r\n    \r\n\r\n    \r\n}\r\n \r\nexport default AddList\r\n","export default __webpack_public_path__ + \"static/media/delete-forever.87e2fd4b.svg\";","import React from 'react';\r\nimport AddList from './addList';\r\nimport deleteImg from '../utils/img/delete-forever.svg' \r\nimport {categoryListData} from './todoList';\r\nimport { animated } from 'react-spring';\r\nimport { Link } from 'react-router-dom';    \r\n\r\nconst Schedule = (props) => {\r\n    const {data, deleteList} = props;\r\n    const categoryList = [...categoryListData()];\r\n    const changeRoute = (id) => {\r\n        props.history.push(`/content/${id}`);\r\n    }\r\n    \r\n    return (         \r\n        <React.Fragment>\r\n        <div className=\"schedule\">\r\n            <h3 className='schedule-heading'> <Link to=\"/\"> Today's Schedule</Link></h3>\r\n            <ul className=\"all-schedule\">\r\n                {data.map(eachList => ( \r\n                    <li key={eachList.id}  className=\"schedule-list\">\r\n                        <div key={eachList.id} className=\"each-catg flex\" >\r\n                         <div className=\"flex detail\" onClick={() => changeRoute(eachList.id)}>\r\n                             <animated.div style={{backgroundColor:`${categoryList[(eachList.category)].color}`}} className=\"status\"></animated.div>\r\n                            <h4>{eachList.title}</h4>\r\n                            <div className=\"right-catg flex\" >\r\n                                <span className=\"time\">{eachList.time}</span>\r\n                                <span className=\"gt\">&gt;</span>\r\n                            </div>\r\n                        </div>   \r\n                        <div className=\"cancel\" onClick={() => \r\n                            deleteList(eachList.id)}>\r\n                            <img src={deleteImg} alt=\"delete icon\"/>\r\n                        </div>\r\n                        </div>\r\n                    </li>\r\n                )\r\n                \r\n                )}\r\n                {/* { isEmpty && <div> hello </div>} */}\r\n            </ul>\r\n            \r\n            \r\n            \r\n            \r\n        </div>\r\n        <AddList  addToList={props.addToList}/>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\n\r\nexport default Schedule;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { animated } from 'react-spring';\r\n\r\nconst ListDetail = (props) => {\r\n    const {data, style} = props;\r\n    const match = parseInt(props.match.params.id);\r\n\r\n    const generateID = () => {\r\n        const newData = data.filter(each => each.id === match);\r\n        return newData;\r\n    }\r\n    const selectedQuery = generateID();\r\n    return (\r\n        <React.Fragment>\r\n\r\n            {selectedQuery.map(sq => (\r\n            \r\n            <animated.div key={sq.id} style={style} className={props.className}>\r\n                <h1>{sq.title}</h1>\r\n                <p  class=\"time\">Time CREATED: {sq.time} </p>\r\n                <span style={{display:\"block\", \r\n                marginBottom:\"10px\", \r\n                fontSize:\"1.1rem\",\r\n                 }} >DATE CREATED: {sq.date} </span>\r\n                 <hr/>\r\n                <p> {sq.description} </p>\r\n            </animated.div>            \r\n                ))}\r\n\r\n            <div className=\"flex btn-back\" >\r\n                <button className=\"primary-btn\">\r\n                   <Link to=\"/\"> Back to Lists </Link>\r\n                </button>\r\n            </div>\r\n    </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default ListDetail;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Not Found</h1>\r\n            <a href=\"/\" style={{fontSize:\"1.5rem\"}}>Show all list</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport Category from './category';\r\nimport Schedule from './schedule';\r\nimport ListDetail from './listDetail';\r\nimport { todoListData, getCurrentDate } from './todoList';\r\nimport {Switch, Route, Redirect, useLocation, useHistory} from 'react-router-dom';\r\nimport NotFound from './NotFound';\r\nimport {useState} from 'react';\r\nimport { useTransition } from '@react-spring/core';\r\nimport { animated } from '@react-spring/web';\r\n\r\nfunction Todo() {\r\n    const [dataItems, setDataItems] = useState(todoListData().sort());\r\n    const [mainItem, setMainItems] = useState(todoListData().sort());\r\n    const [idGenerate, setID] = useState(mainItem.length+1);\r\n    \r\n    // const maxNumber = () => {\r\n    //     let max = 0;\r\n    //     let main = [...mainItem]\r\n    //     for(let each = 1; each < main.length; each++) {\r\n    //         max = main[each].id > main[each-1].id ? main[each].id :main[each-1].id;\r\n    //     }\r\n    //     console.log(main)\r\n    \r\n    //     return max;\r\n    // }\r\n\r\n    const addToList = (dict) => {\r\n        const dataItem = [...mainItem]\r\n        setID(idGenerate+1)\r\n        const lastElement = idGenerate;\r\n        const [date, time] = getCurrentDate();\r\n        const newTodo = {id: lastElement, time: time, date:date, ...dict}\r\n        dataItem.push(newTodo);\r\n        dataItem.sort();\r\n        setDataItems(dataItem);\r\n        setMainItems(dataItem);\r\n        console.log(dataItem);\r\n    }   \r\n    // comment out for filtering\r\n    // const filterList = (id) => {\r\n        //     let dataItem = [...dataItems]\r\n    //     dataItem = dataItem.filter((e) => e.id !== id); \r\n\r\n    //     setDataItems(dataItem);\r\n    // }\r\n\r\n    const deleteItem = (id) => {\r\n        let dataItem = ([...dataItems]).filter((e) => e.id !== id);\r\n        let mainItems = [...mainItem];\r\n        const itemSelect2 = mainItems.filter((e) => e.id === id);  \r\n        mainItems.splice(mainItems.indexOf(itemSelect2[0]),1);\r\n        setMainItems(mainItems);\r\n        setDataItems(dataItem);\r\n    }\r\n\r\n    const filter = (id) => {\r\n        let dataItem = [...mainItem];\r\n        dataItem = id ? dataItem.filter((e) => e.category === id) : dataItem;\r\n        return dataItem;\r\n    }\r\n    const history = useHistory();\r\n    //  \"/content/1\"\r\n    const sortByCategory = (id) => {\r\n        const path = history.location.pathname.toString();\r\n        if(path.includes(\"/content\")) {\r\n            history.push(\"/\");\r\n            setDataItems(filter(id));\r\n        }\r\n            else setDataItems(filter(id));\r\n    }\r\n\r\n    function countItem(id) {\r\n        return filter(id).length;\r\n    }\r\n\r\n    const location = useLocation();\r\n\r\n    const transitions = useTransition(location, { \r\n        from: {opacity: 0, transform: 'translateX(30px)'},\r\n        enter: [\r\n            {opacity: 1, transform: 'translateX(0px)'},\r\n                ],\r\n        config: {duration: 1000, delay: 0}\r\n     })\r\n\r\n    \r\n    return (                 \r\n                <div className=\"todo-main\"> \r\n                    <div className=\"inner-main\">\r\n                        <div className=\"plan-header\">\r\n                            <h1>Let's Plan 😊</h1>\r\n                            <h4>Schedule </h4>\r\n                        </div>\r\n                        <Category countItem={countItem} sortCategory={sortByCategory} />\r\n                    {transitions((props, item) => (\r\n                      <animated.div style={props}>\r\n                      <Switch >\r\n                        <Route style={props} path=\"/content/:id\" render={(props, style)=> <ListDetail style={style} className=\"list-content\" data={dataItems} {...props} />}/>  \r\n                        <Route path=\"/not-found\" component={NotFound} /> \r\n                        <Route style={props} path=\"/\" exact\r\n                        render={(props) => <Schedule deleteList={deleteItem} data={dataItems} addToList={addToList} {...props} /> } />\r\n                        <Redirect to=\"/not-found\" />\r\n                      </Switch>     \r\n                      </animated.div>\r\n                    )) }\r\n                    \r\n                    </div>\r\n                    \r\n                </div>\r\n                );\r\n    }\r\n\r\n \r\nexport default Todo;","import React from 'react';\r\nimport Wrapper from '../utils/style'\r\nimport Todo from './todo';\r\n// import {useTransition} from 'react-spring';\r\n\r\nconst App = () => {\r\n    return ( \r\n        <React.Fragment>\r\n            <Wrapper>\r\n            <div className=\"flex main\">\r\n                    <div className=\"user-text\">\r\n                        <h1 className=\"h1-incr\">Hi User!</h1>\r\n                        <p>What are your plan(s) today?</p>\r\n                    </div>\r\n                    <Todo />\r\n            </div>\r\n            </Wrapper>\r\n        </React.Fragment> );         \r\n    }\r\n\r\n \r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport reactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport '../src/style.css'\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nreactDOM.render(<BrowserRouter> <App /> </BrowserRouter>, document.querySelector('#root'));\r\n\r\n\r\n\r\n"],"sourceRoot":""}